####################################################
# EXTRACT WORKFLOW EXECUTION INFO
####################################################
name: "Extract Workflow Execution Info"
description: "This action extracts workflow execution info like commit stats and trigger info"
inputs: {}  # If you don't have any inputs, you can leave it empty or remove this line.
outputs:
  SHORT_SHA:
    description: ""
    value: ${{ steps.execution_info.outputs.SHORT_SHA }}
  FULL_SHA:
    description: ""
    value: ${{ steps.execution_info.outputs.FULL_SHA }}
  COMMIT_MSG:
    description: ""
    value: ${{ steps.execution_info.outputs.COMMIT_MSG }}
  COMMIT_AUTHOR:
    description: ""
    value: ${{ steps.execution_info.outputs.COMMIT_AUTHOR }}
  COMMIT_DATE:
    description: ""
    value: ${{ steps.execution_info.outputs.COMMIT_DATE }}
  COMMIT_AGO:
    description: ""
    value: ${{ steps.execution_info.outputs.COMMIT_AGO }}
  TRIGGER_INFO:
    description: ""
    value: ${{ steps.execution_info.outputs.TRIGGER_INFO }}
runs:
  using: "composite"
  steps:
  - name: ?? Extract Commit Info (Windows PowerShell)
    id: execution_info
    shell: pwsh
    run: |
      $shortSha = git rev-parse --short HEAD
      $fullSha = git rev-parse HEAD
      $msg = git log -1 --pretty=%s
      $author = git log -1 --pretty='%an'
      $commitdateRaw = git log -1 --date=iso-local --pretty='%cd'
      # Convert COMMIT_DATE to IST
      $commitDateUtc = [DateTimeOffset]::Parse($commitDateRaw).ToUniversalTime()
      $istOffset = [System.TimeSpan]::FromHours(5.5)
      $commitDateIST = $commitDateUtc.ToOffset($istOffset).ToString("yyyy-MM-dd HH:mm:ss")
  
      $commitTs = git log -1 --pretty=%ct
      $nowTs = [int][double]::Parse((Get-Date -UFormat %s))
      $deltaMin = [math]::Floor(($nowTs - $commitTs) / 60)
      
      if ($deltaMin -lt 1) {
        $ago = "Just now"
      } elseif ($deltaMin -eq 1) {
        $ago = "1 minute ago"
      } else {
        $ago = "$deltaMin minutes ago"
      }
      
      "SHORT_SHA=$shortSha" >>  $env:GITHUB_OUTPUT
      "FULL_SHA=$fullSha" >>  $env:GITHUB_OUTPUT
      "COMMIT_MSG=$msg" >>  $env:GITHUB_OUTPUT
      "COMMIT_AUTHOR=$author" >>  $env:GITHUB_OUTPUT
      "COMMIT_DATE=$commitDateIST" >>  $env:GITHUB_OUTPUT
      "COMMIT_AGO=$ago" >>  $env:GITHUB_OUTPUT
      
      # Accessing GitHub context variables in PowerShell
      $eventName = "${{ github.event_name }}"
      $refName = "${{ github.ref_name }}"
      if ($eventName -eq "schedule") {
        "TRIGGER_INFO=üîî <strong>Job Triggered By:</strong><code>Scheduled Run (cron)<br>‚è∞ <strong>Schedule:</strong> <code>09:09 AM IST every Monday</code>" >>  $env:GITHUB_OUTPUT
      } elseif ($eventName -eq "push") {
        "TRIGGER_INFO=‚ö° <strong>Job Triggered By:</strong> <code>Manually Run/PR-triggered Run</code> <br>üåø <strong>Source Branch:</strong> <code>$refName</code>" >>  $env:GITHUB_OUTPUT
      } 
