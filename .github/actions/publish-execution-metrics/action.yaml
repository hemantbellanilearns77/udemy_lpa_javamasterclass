####################################################
# CALCULATE AND PUBLISH WORKFLOW EXECUTION METRICS
####################################################
name: "Calculate and Publish Workflow Execution Metrics"
description: "Calculate and Publish Workflow Execution Infor"
inputs:
  startTime:
    description: "The start time to base calculations upon"
    required: true
outputs:
  startTime:
    description: "Workflow start time in IST"
    value: ${{ steps.calculate-and-publish-execution_metrics.outputs.startTime }}
  endTime:
    description: "Workflow end time in IST"
    value: ${{ steps.calculate-and-publish-execution_metrics.outputs.endTime }}
  formattedDuration:
    description: "Workflow duration in minutes and seconds"
    value: ${{ steps.calculate-and-publish-execution_metrics.outputs.formattedDuration }}
runs:
  using: "composite"
  steps:
###############################
# Calculate Execution Metrics
##############################

  - name: ?? Calculate Duration and Export Timing
    id: calculate-and-publish-execution_metrics
    shell: pwsh
    env:
      START_EPOCH: ${{ inputs.startTime }}
    run: |
      # Define IST offset
      $istOffset = [System.TimeSpan]::FromHours(5.5)
      
      $startEpoch = [int]$env:START_EPOCH
      $endEpoch = [int][double]::Parse((Get-Date -UFormat %s))
      
      $startDT = [System.DateTimeOffset]::FromUnixTimeSeconds($startEpoch).ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss")
      $endDT = [System.DateTimeOffset]::FromUnixTimeSeconds($endEpoch).ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss")
      
      # Convert to DateTimeOffset and shift to IST
      $startDT_IST = [System.DateTimeOffset]::FromUnixTimeSeconds($startEpoch).ToOffset($istOffset).ToString("yyyy-MM-dd HH:mm:ss")
      $endDT_IST   = [System.DateTimeOffset]::FromUnixTimeSeconds($endEpoch).ToOffset($istOffset).ToString("yyyy-MM-dd HH:mm:ss")
      
      $durationSec = $endEpoch - $startEpoch
      $mins = [math]::Floor($durationSec / 60)
      $secs = $durationSec % 60
      $durationFormatted = "{0}m {1}s" -f $mins, $secs
      
      echo "startTime=$startDT_IST" >> $env:GITHUB_OUTPUT
      echo "endTime=$endDT_IST" >> $env:GITHUB_OUTPUT
      echo "formattedDuration=$durationFormatted" >> $env:GITHUB_OUTPUT