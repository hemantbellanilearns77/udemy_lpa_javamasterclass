####################################################
# DOWNLOAD TOOLS AND SETUP TOOLS
####################################################
name: "Download Hygiene Check Tools"
description: "Download tools that will evaluate hygiene health of the project"
inputs: { }  # If there aren't any inputs, leave it empty or remove this line.
# outputs: { }  # If you don't have any outputs, you can leave it empty or remove this line.
outputs:
    scanner_bin_win:
      description: "The Windows-formatted path to the scanner's bin directory"
      value: ${{ steps.convert_path.outputs.scanner_bin_win }}

runs:
  using: "composite"
  steps:
    ##########################
    # DOWNLOAD CHECKSTYLE
    ##########################

    - name: ?? Download Checkstyle
      run: |
        mkdir tools\checkstyle
        curl -L -o tools\checkstyle\checkstyle-10.26.1-all.jar https://github.com/checkstyle/checkstyle/releases/download/checkstyle-10.26.1/checkstyle-10.26.1-all.jar
      shell: cmd

    ##############################
    # DOWNLOAD PMD and SETUP PMD
    ##############################
    - name: ?? Download and Extract PMD
      run: curl -L -o pmd.zip https://github.com/pmd/pmd/releases/download/pmd_releases%2F7.15.0/pmd-dist-7.15.0-bin.zip
      shell: bash


    - name: ?? Extract PMD
      run: |
        mkdir tools\pmd
        powershell -Command "Expand-Archive -Path 'pmd.zip' -DestinationPath 'tools\pmd'"
      shell: cmd
      ##########################
      # DOWNLOAD JACOCO+JUNIT
      ##########################

    - name: ?? Download JaCoCo + JUnit Console
      run: |
        mkdir tools\jacoco-0.8.13\lib
        curl -L -o tools\jacoco-0.8.13\lib\jacocoagent.jar https://repo1.maven.org/maven2/org/jacoco/org.jacoco.agent/0.8.13/org.jacoco.agent-0.8.13-runtime.jar
        curl -L -o tools\jacoco-0.8.13\lib\jacococli.jar https://repo1.maven.org/maven2/org/jacoco/org.jacoco.cli/0.8.13/org.jacoco.cli-0.8.13-nodeps.jar
        mkdir tools\junit-console
        curl -L -o tools\junit-console\junit-platform-console-standalone-1.13.0.jar https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.13.0/junit-platform-console-standalone-1.13.0.jar
      shell: cmd

      ##########################
      # DOWNLOAD SONAR-SCANNER
      ##########################
    - name: Download and Setup Latest SonarScanner CLI
      id: download_scanner_step # Add an ID to the step to reference its outputs
      shell: bash
      run: |
        LATEST_SCANNER_VERSION="7.2.0.5079"
        DOWNLOAD_URL="https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${LATEST_SCANNER_VERSION}-windows-x64.zip"
        
        curl -sSLo sonar-scanner.zip "${DOWNLOAD_URL}"
        mkdir -p tools/sonar-scanner
        unzip sonar-scanner.zip -d tools/sonar-scanner
        
        EXTRACTED_FOLDER=$(ls tools/sonar-scanner | grep "sonar-scanner")
        
        echo "scanner_bin_dir=$PWD/tools/sonar-scanner/${EXTRACTED_FOLDER}/bin" >> "$GITHUB_OUTPUT" # Save Bash path to output
        echo "Successfully found scanner bin directory: tools/sonar-scanner/${EXTRACTED_FOLDER}/bin"

    - name: Convert Path to Windows Format and Save to File
      shell: pwsh
      id: convert_path
      run: |
          $bashPath = "${{ steps.download_scanner_step.outputs.scanner_bin_dir }}"
          Write-Host "Bash Path to convert: $bashPath"
          
          $winPath = (cmd.exe /c "cygpath -w `"$bashPath`"").Trim()
          Write-Host "Converted Windows Path: $winPath"
          
          # "SONAR_SCANNER_BIN=$winPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
            "scanner_bin_win=$winPath" | Out-File -FilePath "$env:GITHUB_OUTPUT" -Encoding utf-8 -Append
