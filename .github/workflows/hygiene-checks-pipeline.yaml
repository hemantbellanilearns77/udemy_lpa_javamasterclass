name: ðŸ“Š Hygiene Checks Pipeline
on:
  workflow_dispatch: # Run manually
  schedule:
    # Runs at 9:00 AM and 9:00 PM IST, Monday-Thursday
    # 9:00 AM IST -> 3:30 AM UTC
    # 9:00 PM IST -> 3:30 PM UTC
    - cron: '30 3,15 * * 1-4'

    # Runs on Friday at 12:09 AM, 9:00 AM, and 12:15 PM IST
    # 12:09 AM IST -> 6:39 PM UTC (on Thursday)
    # 9:00 AM IST -> 3:30 AM UTC
    # 12:15 PM IST -> 6:45 AM UTC
    - cron: '39 18 * * 4' # For Friday 12:09 AM IST (runs on Thursday UTC)
    - cron: '30 3 * * 5' # For Friday 9:00 AM IST
    - cron: '45 6 * * 5' # For Friday 12:15 PM IST

jobs:
  hygiene-checks:
    name: Hygiene Checks - Checkstyle + PMD + JaCoCo + Sonar
    runs-on: windows-latest
    env:
      SONAR_ORG: ${{ vars.SONAR_ORG }}
      SONAR_PROJECT_KEY: ${{ vars.SONAR_PROJECT_KEY }}
      SONAR_FETCH_SLEEP_TIME: 27
      MODULE_PATHS: |
        udemy_lpa_javamasterclass_main=src/main/java/com/hb/study/udemy_lpa_javamasterclass
        misc_utils_main=misc_utils/src/main/java/com/hb/study/misc_utils
        udemy_lpa_javamasterclass_test=src/test/java/com/hb/study/udemy_lpa_javamasterclass
        misc_utils_test=misc_utils/src/test/java/com/hb/study/misc_utils
      # --- Code Coverage ---
      JACOCO_MIN_COVERAGE: 75        # Require at least 75% coverage

      # --- Aggregate Violations ---
      CHECKSTYLE_PMD_MAX_TOTAL_VIOLATIONS: 300  # Maximum total violations (Checkstyle + PMD)
      CHECKSTYLE_MAX_VIOLATIONS: 200            # Max Checkstyle violations per module
      PMD_MAX_VIOLATIONS: 50                    # Max PMD violations per module

      # --- SonarCloud Severity Thresholds ---
      BLOCKER_MAX: 0      # Any Blocker fails hygiene
      HIGH_MAX: 10        # Maximum allowed high severity issues
      MEDIUM_MAX: 20      # Maximum allowed medium severity issues
      LOW_MAX: 30         # Maximum allowed low severity issues
      INFO_MAX: 50        # Maximum allowed informational issues
    steps:

      - name: Log trigger for scheduled runs
        if: github.event_name == 'schedule'
        shell: pwsh
        run: |
          if ("${{ github.event.schedule }}" -eq '30 3,15 * * 1-4') {
            Write-Host "âœ… Executing for a business day (Mon-Thurs)."
          } elseif ("${{ github.event.schedule }}" -eq '39 18 * * 4') {
            Write-Host "âœ… Executing on Friday (12:09 AM IST)."
          } elseif ("${{ github.event.schedule }}" -eq '30 3 * * 5') {
            Write-Host "âœ… Executing on Friday (9:00 AM IST)."
          } elseif ("${{ github.event.schedule }}" -eq '45 6 * * 5') {
            Write-Host "âœ… Executing on Friday (12:15 PM IST)."
          }

      - name: Log trigger for manual runs
        if: github.event_name == 'workflow_dispatch'
        shell: pwsh
        run: Write-Host "âœ… Executing manually via workflow_dispatch."

      - name: Exit for other events
        # This step will run only if the event is NOT manual or scheduled.
        if: github.event_name != 'schedule' && github.event_name != 'workflow_dispatch'
        run: |
          Write-Host "This workflow is not configured to run on a '${{ github.event_name }}' event."
          exit 0 # Exit the job successfully, so it doesn't appear as a failure

      - name: Checkout Code for Manual and Scheduled triggers
        # Only run checkout if the event is 'schedule' or 'workflow_dispatch'
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          # Note: 'pull_request.head.ref' is for pull request events, which you are not
          # triggering on. 'github.ref_name' is for pushes or schedules.
          ref: ${{ github.ref_name }}
          fetch-depth: 0
