name: ðŸ“Š Hygiene Checks Pipeline
on:
  # workflow_dispatch: # run manually
  schedule:
    # - cron: '45 06 * * 1-4' # Runs 12:15 PM IST  every WeekDay excluding Friday
    - cron: '38 7 * * *' # Runs 1:08 PM IST  every Day
  push:
    branches:
    - main
jobs:
  hygiene-checks:
    name: Hygiene Checks - Checkstyle + PMD + JaCoCo + Sonar
    runs-on: windows-latest
    env:
      MODULE_PATHS: |
        udemy_lpa_javamasterclass_main=src/main/java/com/hb/study/udemy_lpa_javamasterclass
        misc_utils_main=misc_utils/src/main/java/com/hb/study/misc_utils
        udemy_lpa_javamasterclass_test=src/test/java/com/hb/study/udemy_lpa_javamasterclass
        misc_utils_test=misc_utils/src/test/java/com/hb/study/misc_utils
      TRIGGER_TYPE: ${{ github.event_name }}
      TRIGGER_BRANCH: ${{ github.ref_name }}
      JACOCO_MIN_COVERAGE: 9
      CHECKSTYLE_PMD_MAX_TOTAL_VIOLATIONS: 12006
      CHECKSTYLE_MAX_VIOLATIONS: 12000
      PMD_MAX_VIOLATIONS: 63
      SONAR_ORG: ${{ vars.SONAR_ORG }}
      SONAR_PROJECT_KEY: ${{ vars.SONAR_PROJECT_KEY }}
      SONAR_FETCH_SLEEP_TIME: 27

    steps:

      ####################################################
                # CHECKOUT CODE COMMITTED
      ####################################################
      - name: ?? Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # fetches all history, not just 1 commit

      ####################################################
      # CAPTURE START TIME OF GITHUB ACTION's JOB
      ####################################################
      - name: Call Start Time Action
        id: start_time
        uses: ./.github/actions/setup-starttime

      ##############################################################################
        # Setup JDK 24 (Temurin with Zulu fallback for JaCoCo + Compilation)
      ##############################################################################
      - name: Setup Java (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 24
        continue-on-error: true

      - name: Fallback Setup Java (Zulu)
        if: failure()
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 24
      
      #######################################################################
        # DOWNLOAD TOOLS (CHECKSTYLE AND PMD AND JACOCO AND SONAR) AND SETUP
      #######################################################################
      - name: Download Tools & Setup for Execution
        id: download_setup_tools
        uses: ./.github/actions/download-setup-tools

      ##########################
      # COMPILE + JACOCO
      ##########################

      - name: ??? Compile Java Modules if Needed
        shell: cmd
        run: |
          set "JAVA_HOME=%JAVA_HOME%"
          set "OUT_PROD=out\production"
          set "OUT_TEST=out\test"
          set "SRC_MAIN=src\main\java"
          set "SRC_MISC=misc_utils\src\main\java"
          set "TEST_MAIN=src\test\java"
          set "TEST_MISC=misc_utils\src\test\java"
          set "JUNIT_JAR=tools\junit-console\junit-platform-console-standalone-1.13.0.jar"

          if not exist "%OUT_PROD%\udemy_lpa_javamasterclass" (
            if not exist "%OUT_PROD%\misc_utils" (
              echo ? Compilation triggered

              rmdir /s /q "%OUT_PROD%" >nul 2>&1
              rmdir /s /q "%OUT_TEST%" >nul 2>&1

              mkdir "%OUT_PROD%\udemy_lpa_javamasterclass"
              mkdir "%OUT_PROD%\misc_utils"
              mkdir "%OUT_TEST%\udemy_lpa_javamasterclass"
              mkdir "%OUT_TEST%\misc_utils"

              echo ? Compiling udemy_lpa_javamasterclass
              dir /s /b "%SRC_MAIN%\*.java" > sources_main.txt
              javac --enable-preview --release 24 -encoding UTF-8 -d "%OUT_PROD%\udemy_lpa_javamasterclass" @sources_main.txt

              echo ? Compiling misc_utils
              dir /s /b "%SRC_MISC%\*.java" > sources_misc.txt
              javac --enable-preview --release 24 -encoding UTF-8 -cp "%OUT_PROD%\udemy_lpa_javamasterclass" -d "%OUT_PROD%\misc_utils" @sources_misc.txt

              echo ? Compiling tests (masterclass)
              dir /s /b "%TEST_MAIN%\*.java" > sources_test_main.txt
              javac --enable-preview --release 24 -encoding UTF-8 -cp "%OUT_PROD%\udemy_lpa_javamasterclass;%OUT_PROD%\misc_utils;%JUNIT_JAR%" -d "%OUT_TEST%\udemy_lpa_javamasterclass" @sources_test_main.txt

              echo ? Compiling tests (misc_utils)
              if exist "%TEST_MISC%" (
                dir /s /b "%TEST_MISC%\*.java" > sources_test_misc.txt
                javac --enable-preview --release 24 -encoding UTF-8 -cp "%OUT_PROD%\udemy_lpa_javamasterclass;%OUT_PROD%\misc_utils;%JUNIT_JAR%" -d "%OUT_TEST%\misc_utils" @sources_test_misc.txt
              )

              del sources_main.txt sources_misc.txt sources_test_main.txt sources_test_misc.txt
            )
          )

      ###############################################################
        # HYGIENE HEALTH CHECKS AND UPLOAD REPORTS - COMPOSITE CALL
      ##############################################################

      - name: Hygiene Health Checks and Upload Reports - Composite Call
        id: hygiene-sweep-and-upload-reports
        uses: ./.github/actions/hygiene-health-sweep-and-upload-reports
        with: {}
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      ###############################
      # PUBLISH EXECUTION INFO
      ##############################

      - name: Publish Execution Info (Commit Info and Duration) - Composite Call
        id: execution_metrics
        uses: ./.github/actions/execution-info
        with:
          startTime: ${{ steps.start_time.outputs.startTime }}

      - name: Use output in summary
        run: |
          echo "Start Time: ${{ steps.execution-info.outputs.startTime }}"
          echo "End Time:   ${{ steps.execution-info.outputs.endTime }}"
          echo "Duration:   ${{ steps.execution-info.outputs.formattedDuration }}"

      ##############################################################
        # PUBLISH GITHUB SUMMARY AND SEND-EMAIL - COMPOSITE CALL
      ##############################################################

      - name: PUBLISH GITHUB SUMMARY AND SEND-EMAIL - COMPOSITE CALL
        id: publish-githubsummary-and-sendemail
        uses: ./.github/actions/publish-githubsummary-and-email
        with: {}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SMTP_SERVER_ADDRESS: ${{ vars.SMTP_SERVER_ADDRESS }}
          SMTP_SERVER_PORT: ${{ vars.SMTP_SERVER_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          EMAIL_RECIPIENT: ${{ vars.EMAIL_RECIPIENT }}

      #############################
        # FULL CLEANUP AND VERIFY
      ##############################

      - name: Full Cleanup and Verify Composite Call
        id: cleanup-and-verify-composite-call
        uses: ./.github/actions/full-cleanup-and-verify